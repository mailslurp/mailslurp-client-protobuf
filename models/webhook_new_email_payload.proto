/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import public "models/attachment_meta_data.proto";

message WebhookNewEmailPayload {

  // List of attachment meta data objects if attachments present
  repeated AttachmentMetaData attachmentMetaDatas = 1;

  // List of `BCC` recipients email addresses that the email was addressed to. See recipients object for names.
  repeated string bcc = 2;

  // List of `CC` recipients email addresses that the email was addressed to. See recipients object for names.
  repeated string cc = 3;

  // Date time of event creation
  string createdAt = 4;

  // ID of the email that was received. Use this ID for fetching the email with the `EmailController`.
  string emailId = 5;

  // Name of the event type webhook is being triggered for.
  enum eventName {
    EMAIL_RECEIVED = 0;
    NEW_EMAIL = 1;
    NEW_CONTACT = 2;
    NEW_ATTACHMENT = 3;
    EMAIL_OPENED = 4;
    EMAIL_READ = 5;
  }

  // Who the email was sent from. An email address - see fromName for the sender name.
  string from = 7;

  // Id of the inbox that received an email
  string inboxId = 8;

  // Idempotent message ID. Store this ID locally or in a database to prevent message duplication.
  string messageId = 9;

  // The subject line of the email message as specified by SMTP subject header
  string subject = 10;

  // List of `To` recipient email addresses that the email was addressed to. See recipients object for names.
  repeated string to = 11;

  // ID of webhook entity being triggered
  string webhookId = 12;

  // Name of the webhook being triggered
  string webhookName = 13;

}
