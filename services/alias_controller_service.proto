/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/alias_dto.proto";
import public "models/create_alias_options.proto";
import public "models/page_alias.proto";
import public "models/page_email_projection.proto";
import public "models/page_thread_projection.proto";
import public "models/reply_to_alias_email_options.proto";
import public "models/send_email_options.proto";
import public "models/sent_email_dto.proto";
import public "models/thread_projection.proto";
import public "models/update_alias_options.proto";

service AliasControllerService {
  rpc CreateAlias (CreateAliasRequest) returns (AliasDto);

  rpc DeleteAlias (DeleteAliasRequest) returns (google.protobuf.Empty);

  rpc GetAlias (GetAliasRequest) returns (AliasDto);

  rpc GetAliasEmails (GetAliasEmailsRequest) returns (PageEmailProjection);

  rpc GetAliasThreads (GetAliasThreadsRequest) returns (PageThreadProjection);

  rpc GetAliases (GetAliasesRequest) returns (PageAlias);

  rpc GetThread (GetThreadRequest) returns (ThreadProjection);

  rpc GetThreadsPaginated (GetThreadsPaginatedRequest) returns (PageThreadProjection);

  rpc ReplyToAliasEmail (ReplyToAliasEmailRequest) returns (SentEmailDto);

  rpc SendAliasEmail (SendAliasEmailRequest) returns (SentEmailDto);

  rpc UpdateAlias (UpdateAliasRequest) returns (AliasDto);

}

message CreateAliasRequest {
  CreateAliasOptions createAliasOptions = 1;

}

message DeleteAliasRequest {
  string aliasId = 1;

}

message GetAliasRequest {
  string aliasId = 1;

}

message GetAliasEmailsRequest {
  string aliasId = 1;
  // Optional page index alias email list pagination
  int32 page = 2;
  // Optional page size alias email list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Optional filter by sent after given date time
  string since = 5;
  // Optional filter by sent before given date time
  string before = 6;

}

message GetAliasThreadsRequest {
  string aliasId = 1;
  // Optional page index in thread list pagination
  int32 page = 2;
  // Optional page size in thread list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Optional filter by sent after given date time
  string since = 5;
  // Optional filter by sent before given date time
  string before = 6;

}

message GetAliasesRequest {
  // Optional search term
  string search = 1;
  // Optional page index in alias list pagination
  int32 page = 2;
  // Optional page size in alias list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Filter by created at after the given timestamp
  string since = 5;
  // Filter by created at before the given timestamp
  string before = 6;

}

message GetThreadRequest {
  string threadId = 1;

}

message GetThreadsPaginatedRequest {
  // Optional page index in thread list pagination
  int32 page = 1;
  // Optional page size in thread list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Optional filter by sent after given date time
  string since = 4;
  // Optional filter by sent before given date time
  string before = 5;

}

message ReplyToAliasEmailRequest {
  // ID of the alias that email belongs to
  string aliasId = 1;
  // ID of the email that should be replied to
  string emailId = 2;
  ReplyToAliasEmailOptions replyToAliasEmailOptions = 3;

}

message SendAliasEmailRequest {
  string aliasId = 1;
  SendEmailOptions sendEmailOptions = 2;

}

message UpdateAliasRequest {
  string aliasId = 1;
  UpdateAliasOptions updateAliasOptions = 2;

}

