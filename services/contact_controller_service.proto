/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/contact_dto.proto";
import public "models/contact_projection.proto";
import public "models/create_contact_options.proto";
import public "models/page_contact_projection.proto";

service ContactControllerService {
  rpc CreateContact (CreateContactRequest) returns (ContactDto);

  rpc DeleteContact (DeleteContactRequest) returns (google.protobuf.Empty);

  rpc GetAllContacts (GetAllContactsRequest) returns (PageContactProjection);

  rpc GetContact (GetContactRequest) returns (ContactDto);

  rpc GetContactVCard (GetContactVCardRequest) returns (GetContactVCardResponse);

  rpc GetContacts (google.protobuf.Empty) returns (GetContactsResponse);

}

message CreateContactRequest {
  // createContactOptions
  CreateContactOptions createContactOptions = 1;

}

message DeleteContactRequest {
  // contactId
  string contactId = 1;

}

message GetAllContactsRequest {
  // Filter by created at before the given timestamp
  string before = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Filter by created at after the given timestamp
  string since = 3;
  // Optional page size in list pagination
  int32 size = 4;
  // Optional createdAt sort direction ASC or DESC
  string sort = 5;

}

message GetContactRequest {
  // contactId
  string contactId = 1;

}

message GetContactVCardRequest {
  // contactId
  string contactId = 1;

}

message GetContactVCardResponse {
  bytes data = 1;
}

message GetContactsResponse {
  repeated ContactProjection data = 1;
}

