/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/contact_dto.proto";
import public "models/contact_projection.proto";
import public "models/create_contact_options.proto";
import public "models/page_contact_projection.proto";

service ContactControllerService {
  rpc CreateContact (CreateContactRequest) returns (ContactDto);

  rpc DeleteContact (DeleteContactRequest) returns (google.protobuf.Empty);

  rpc GetAllContacts (GetAllContactsRequest) returns (PageContactProjection);

  rpc GetContact (GetContactRequest) returns (ContactDto);

  rpc GetContactVCard (GetContactVCardRequest) returns (google.protobuf.Empty);

  rpc GetContacts (google.protobuf.Empty) returns (GetContactsResponse);

}

message CreateContactRequest {
  CreateContactOptions createContactOptions = 1;

}

message DeleteContactRequest {
  string contactId = 1;

}

message GetAllContactsRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size in list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by created at after the given timestamp
  string since = 4;
  // Filter by created at before the given timestamp
  string before = 5;
  // Search terms
  string search = 6;

}

message GetContactRequest {
  string contactId = 1;

}

message GetContactVCardRequest {
  string contactId = 1;

}

message GetContactsResponse {
  repeated ContactProjection data = 1;
}

