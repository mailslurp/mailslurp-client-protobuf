/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_totp_device_base32_secret_key_options.proto";
import public "models/create_totp_device_custom_options.proto";
import public "models/create_totp_device_otp_auth_url_options.proto";
import public "models/totp_device_code_dto.proto";
import public "models/totp_device_dto.proto";
import public "models/totp_device_optional_dto.proto";

service MFAControllerService {
  rpc CreateTotpDeviceForBase32SecretKey (CreateTotpDeviceForBase32SecretKeyRequest) returns (TotpDeviceDto);

  rpc CreateTotpDeviceForCustom (CreateTotpDeviceForCustomRequest) returns (TotpDeviceDto);

  rpc CreateTotpDeviceForOtpAuthUrl (CreateTotpDeviceForOtpAuthUrlRequest) returns (TotpDeviceDto);

  rpc GetTotpDevice (GetTotpDeviceRequest) returns (TotpDeviceDto);

  rpc GetTotpDeviceBy (GetTotpDeviceByRequest) returns (TotpDeviceOptionalDto);

  rpc GetTotpDeviceCode (GetTotpDeviceCodeRequest) returns (TotpDeviceCodeDto);

}

message CreateTotpDeviceForBase32SecretKeyRequest {
  CreateTotpDeviceBase32SecretKeyOptions createTotpDeviceBase32SecretKeyOptions = 1;

}

message CreateTotpDeviceForCustomRequest {
  CreateTotpDeviceCustomOptions createTotpDeviceCustomOptions = 1;

}

message CreateTotpDeviceForOtpAuthUrlRequest {
  CreateTotpDeviceOtpAuthUrlOptions createTotpDeviceOtpAuthUrlOptions = 1;

}

message GetTotpDeviceRequest {
  string id = 1;

}

message GetTotpDeviceByRequest {
  // Optional name filter
  string name = 1;
  // Optional issuer filter
  string issuer = 2;
  // Optional username filter
  string username = 3;

}

message GetTotpDeviceCodeRequest {
  // ID of the TOTP device to get the code for
  string id = 1;
  // Optional time to get code for. If not provided, current time is used.
  string at = 2;
  // Optional minimum time until code expires. Will hold thread open until period reached.
  int32 minSecondsUntilExpire = 3;

}

