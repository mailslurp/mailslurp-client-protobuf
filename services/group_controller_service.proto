/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_group_options.proto";
import public "models/group_contacts_dto.proto";
import public "models/group_dto.proto";
import public "models/group_projection.proto";
import public "models/page_contact_projection.proto";
import public "models/page_group_projection.proto";
import public "models/update_group_contacts.proto";

service GroupControllerService {
  rpc AddContactsToGroup (AddContactsToGroupRequest) returns (GroupContactsDto);

  rpc CreateGroup (CreateGroupRequest) returns (GroupDto);

  rpc DeleteGroup (DeleteGroupRequest) returns (google.protobuf.Empty);

  rpc GetAllGroups (GetAllGroupsRequest) returns (PageGroupProjection);

  rpc GetGroup (GetGroupRequest) returns (GroupDto);

  rpc GetGroupWithContacts (GetGroupWithContactsRequest) returns (GroupContactsDto);

  rpc GetGroupWithContactsPaginated (GetGroupWithContactsPaginatedRequest) returns (PageContactProjection);

  rpc GetGroups (google.protobuf.Empty) returns (GetGroupsResponse);

  rpc RemoveContactsFromGroup (RemoveContactsFromGroupRequest) returns (GroupContactsDto);

}

message AddContactsToGroupRequest {
  string groupId = 1;
  UpdateGroupContacts updateGroupContacts = 2;

}

message CreateGroupRequest {
  CreateGroupOptions createGroupOptions = 1;

}

message DeleteGroupRequest {
  string groupId = 1;

}

message GetAllGroupsRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size in list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by created at after the given timestamp
  string since = 4;
  // Filter by created at before the given timestamp
  string before = 5;

}

message GetGroupRequest {
  string groupId = 1;

}

message GetGroupWithContactsRequest {
  string groupId = 1;

}

message GetGroupWithContactsPaginatedRequest {
  string groupId = 1;
  // Optional page index in group contact pagination
  int32 page = 2;
  // Optional page size in group contact pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Filter by created at after the given timestamp
  string since = 5;
  // Filter by created at before the given timestamp
  string before = 6;

}

message GetGroupsResponse {
  repeated GroupProjection data = 1;
}

message RemoveContactsFromGroupRequest {
  string groupId = 1;
  UpdateGroupContacts updateGroupContacts = 2;

}

