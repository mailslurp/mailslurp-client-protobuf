/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_group_options.proto";
import public "models/group_contacts_dto.proto";
import public "models/group_dto.proto";
import public "models/group_projection.proto";
import public "models/page_contact_projection.proto";
import public "models/page_group_projection.proto";
import public "models/update_group_contacts.proto";

service GroupControllerService {
  rpc AddContactsToGroup (AddContactsToGroupRequest) returns (GroupContactsDto);

  rpc CreateGroup (CreateGroupRequest) returns (GroupDto);

  rpc DeleteGroup (DeleteGroupRequest) returns (google.protobuf.Empty);

  rpc GetAllGroups (GetAllGroupsRequest) returns (PageGroupProjection);

  rpc GetGroup (GetGroupRequest) returns (GroupDto);

  rpc GetGroupWithContacts (GetGroupWithContactsRequest) returns (GroupContactsDto);

  rpc GetGroupWithContactsPaginated (GetGroupWithContactsPaginatedRequest) returns (PageContactProjection);

  rpc GetGroups (google.protobuf.Empty) returns (GetGroupsResponse);

  rpc RemoveContactsFromGroup (RemoveContactsFromGroupRequest) returns (GroupContactsDto);

}

message AddContactsToGroupRequest {
  // groupId
  string groupId = 1;
  // updateGroupContactsOption
  UpdateGroupContacts updateGroupContactsOption = 2;

}

message CreateGroupRequest {
  // createGroupOptions
  CreateGroupOptions createGroupOptions = 1;

}

message DeleteGroupRequest {
  // groupId
  string groupId = 1;

}

message GetAllGroupsRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size in list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;

}

message GetGroupRequest {
  // groupId
  string groupId = 1;

}

message GetGroupWithContactsRequest {
  // groupId
  string groupId = 1;

}

message GetGroupWithContactsPaginatedRequest {
  // groupId
  string groupId = 1;
  // Optional page index in group contact pagination
  int32 page = 2;
  // Optional page size in group contact pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetGroupsResponse {
  repeated GroupProjection data = 1;
}

message RemoveContactsFromGroupRequest {
  // groupId
  string groupId = 1;
  // updateGroupContactsOption
  UpdateGroupContacts updateGroupContactsOption = 2;

}

