/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/ai_transform_create_options.proto";
import public "models/ai_transform_dto.proto";
import public "models/ai_transform_mapping_dto.proto";
import public "models/ai_transform_result_dto.proto";
import public "models/conditional_structured_content_result.proto";
import public "models/create_ai_transformer_mapping_options.proto";
import public "models/generate_structured_content_attachment_options.proto";
import public "models/generate_structured_content_email_options.proto";
import public "models/generate_structured_content_sms_options.proto";
import public "models/invoke_transformer_options.proto";
import public "models/page_ai_transform_mapping_projection.proto";
import public "models/page_ai_transform_projection.proto";
import public "models/page_ai_transform_result_projection.proto";
import public "models/structured_content_result_dto.proto";
import public "models/structured_output_schema.proto";
import public "models/structured_output_schema_validation.proto";

service AIControllerService {
  rpc CreateTransformer (CreateTransformerRequest) returns (AITransformDto);

  rpc CreateTransformerMappings (CreateTransformerMappingsRequest) returns (AITransformMappingDto);

  rpc DeleteAllTransformerMappings (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc DeleteTransformer (DeleteTransformerRequest) returns (google.protobuf.Empty);

  rpc DeleteTransformerMapping (DeleteTransformerMappingRequest) returns (google.protobuf.Empty);

  rpc DeleteTransformers (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc GenerateStructuredContentFromAttachment (GenerateStructuredContentFromAttachmentRequest) returns (StructuredContentResultDto);

  rpc GenerateStructuredContentFromEmail (GenerateStructuredContentFromEmailRequest) returns (StructuredContentResultDto);

  rpc GenerateStructuredContentFromSms (GenerateStructuredContentFromSmsRequest) returns (StructuredContentResultDto);

  rpc GetTransformer (GetTransformerRequest) returns (AITransformDto);

  rpc GetTransformerMapping (GetTransformerMappingRequest) returns (AITransformMappingDto);

  rpc GetTransformerMappings (GetTransformerMappingsRequest) returns (PageAITransformMappingProjection);

  rpc GetTransformerResult (GetTransformerResultRequest) returns (AITransformResultDto);

  rpc GetTransformerResults (GetTransformerResultsRequest) returns (PageAITransformResultProjection);

  rpc GetTransformers (GetTransformersRequest) returns (PageAITransformProjection);

  rpc InvokeTransformer (InvokeTransformerRequest) returns (ConditionalStructuredContentResult);

  rpc ValidateStructuredOutputSchema (ValidateStructuredOutputSchemaRequest) returns (StructuredOutputSchemaValidation);

}

message CreateTransformerRequest {
  AITransformCreateOptions aITransformCreateOptions = 1;

}

message CreateTransformerMappingsRequest {
  CreateAITransformerMappingOptions createAITransformerMappingOptions = 1;

}

message DeleteTransformerRequest {
  string id = 1;

}

message DeleteTransformerMappingRequest {
  // ID of transform mapping
  string id = 1;

}

message GenerateStructuredContentFromAttachmentRequest {
  GenerateStructuredContentAttachmentOptions generateStructuredContentAttachmentOptions = 1;

}

message GenerateStructuredContentFromEmailRequest {
  GenerateStructuredContentEmailOptions generateStructuredContentEmailOptions = 1;

}

message GenerateStructuredContentFromSmsRequest {
  GenerateStructuredContentSmsOptions generateStructuredContentSmsOptions = 1;

}

message GetTransformerRequest {
  string id = 1;

}

message GetTransformerMappingRequest {
  // ID of transform mapping
  string id = 1;

}

message GetTransformerMappingsRequest {
  string aiTransformId = 1;
  string entityId = 2;
  string entityType = 3;
  int32 page = 4;
  // Optional page size. Maximum size is 100. Use page index and sort to page through larger results
  int32 size = 5;
  // Optional createdAt sort direction ASC or DESC
  string sort = 6;

}

message GetTransformerResultRequest {
  // ID of transform result
  string id = 1;

}

message GetTransformerResultsRequest {
  string aiTransformId = 1;
  string aiTransformMappingId = 2;
  string entityId = 3;
  string entityType = 4;
  int32 page = 5;
  // Optional page size. Maximum size is 100. Use page index and sort to page through larger results
  int32 size = 6;
  // Optional createdAt sort direction ASC or DESC
  string sort = 7;

}

message GetTransformersRequest {
  int32 page = 1;
  // Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Optional list of IDs to include in result
  repeated string include = 4;

}

message InvokeTransformerRequest {
  InvokeTransformerOptions invokeTransformerOptions = 1;

}

message ValidateStructuredOutputSchemaRequest {
  StructuredOutputSchema structuredOutputSchema = 1;

}

