/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/account_bounce_block_dto.proto";
import public "models/bounced_email_dto.proto";
import public "models/bounced_recipient_dto.proto";
import public "models/complaint.proto";
import public "models/filter_bounced_recipients_options.proto";
import public "models/filter_bounced_recipients_result.proto";
import public "models/page_bounced_email.proto";
import public "models/page_bounced_recipients.proto";
import public "models/page_complaint.proto";
import public "models/page_list_unsubscribe_recipients.proto";

service BounceControllerService {
  rpc FilterBouncedRecipient (FilterBouncedRecipientRequest) returns (FilterBouncedRecipientsResult);

  rpc GetAccountBounceBlockStatus (google.protobuf.Empty) returns (AccountBounceBlockDto);

  rpc GetBouncedEmail (GetBouncedEmailRequest) returns (BouncedEmailDto);

  rpc GetBouncedEmails (GetBouncedEmailsRequest) returns (PageBouncedEmail);

  rpc GetBouncedRecipient (GetBouncedRecipientRequest) returns (BouncedRecipientDto);

  rpc GetBouncedRecipients (GetBouncedRecipientsRequest) returns (PageBouncedRecipients);

  rpc GetComplaint (GetComplaintRequest) returns (Complaint);

  rpc GetComplaints (GetComplaintsRequest) returns (PageComplaint);

  rpc GetListUnsubscribeRecipients (GetListUnsubscribeRecipientsRequest) returns (PageListUnsubscribeRecipients);

}

message FilterBouncedRecipientRequest {
  FilterBouncedRecipientsOptions filterBouncedRecipientsOptions = 1;

}

message GetBouncedEmailRequest {
  // ID of the bounced email to fetch
  string id = 1;

}

message GetBouncedEmailsRequest {
  // Optional page index
  int32 page = 1;
  // Optional page size 
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by created at after the given timestamp
  string since = 4;
  // Filter by created at before the given timestamp
  string before = 5;

}

message GetBouncedRecipientRequest {
  // ID of the bounced recipient
  string id = 1;

}

message GetBouncedRecipientsRequest {
  // Optional page index 
  int32 page = 1;
  // Optional page size 
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by created at after the given timestamp
  string since = 4;
  // Filter by created at before the given timestamp
  string before = 5;

}

message GetComplaintRequest {
  // ID of the complaint
  string id = 1;

}

message GetComplaintsRequest {
  // Optional page index 
  int32 page = 1;
  // Optional page size 
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by created at after the given timestamp
  string since = 4;
  // Filter by created at before the given timestamp
  string before = 5;

}

message GetListUnsubscribeRecipientsRequest {
  // Optional page index
  int32 page = 1;
  // Optional page size 
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Filter by domainId
  string domainId = 4;

}

