/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_inbox_forwarder_options.proto";
import public "models/inbox_forwarder_dto.proto";
import public "models/inbox_forwarder_event_dto.proto";
import public "models/inbox_forwarder_test_options.proto";
import public "models/inbox_forwarder_test_result.proto";
import public "models/page_inbox_forwarder_dto.proto";
import public "models/page_inbox_forwarder_events.proto";
import public "models/test_new_inbox_forwarder_options.proto";

service InboxForwarderControllerService {
  rpc CreateNewInboxForwarder (CreateNewInboxForwarderRequest) returns (InboxForwarderDto);

  rpc DeleteInboxForwarder (DeleteInboxForwarderRequest) returns (google.protobuf.Empty);

  rpc DeleteInboxForwarders (DeleteInboxForwardersRequest) returns (google.protobuf.Empty);

  rpc GetAllInboxForwarderEvents (GetAllInboxForwarderEventsRequest) returns (PageInboxForwarderEvents);

  rpc GetForwarderEvent (GetForwarderEventRequest) returns (InboxForwarderEventDto);

  rpc GetInboxForwarder (GetInboxForwarderRequest) returns (InboxForwarderDto);

  rpc GetInboxForwarderEvent (GetInboxForwarderEventRequest) returns (InboxForwarderEventDto);

  rpc GetInboxForwarderEvents (GetInboxForwarderEventsRequest) returns (PageInboxForwarderEvents);

  rpc GetInboxForwarders (GetInboxForwardersRequest) returns (PageInboxForwarderDto);

  rpc TestInboxForwarder (TestInboxForwarderRequest) returns (InboxForwarderTestResult);

  rpc TestInboxForwardersForInbox (TestInboxForwardersForInboxRequest) returns (InboxForwarderTestResult);

  rpc TestNewInboxForwarder (TestNewInboxForwarderRequest) returns (InboxForwarderTestResult);

  rpc UpdateInboxForwarder (UpdateInboxForwarderRequest) returns (InboxForwarderDto);

}

message CreateNewInboxForwarderRequest {
  CreateInboxForwarderOptions createInboxForwarderOptions = 1;
  // Inbox id to attach forwarder to
  string inboxId = 2;

}

message DeleteInboxForwarderRequest {
  // ID of inbox forwarder
  string id = 1;

}

message DeleteInboxForwardersRequest {
  // Optional inbox id to attach forwarder to
  string inboxId = 1;

}

message GetAllInboxForwarderEventsRequest {
  // Optional page index in inbox forwarder event list pagination
  int32 page = 1;
  // Optional page size in inbox forwarder event list pagination
  int32 size = 2;
  // Optional inbox ID to filter for
  string inboxId = 3;
  // Optional email ID to filter for
  string emailId = 4;
  // Optional sent ID to filter for
  string sentId = 5;
  // Optional createdAt sort direction ASC or DESC
  string sort = 6;

}

message GetForwarderEventRequest {
  // ID of inbox forwarder event
  string eventId = 1;

}

message GetInboxForwarderRequest {
  // ID of inbox forwarder
  string id = 1;

}

message GetInboxForwarderEventRequest {
  // ID of inbox forwarder
  string id = 1;
  // ID of inbox forwarder event
  string eventId = 2;

}

message GetInboxForwarderEventsRequest {
  // ID of inbox forwarder
  string id = 1;
  // Optional page index in inbox forwarder event list pagination
  int32 page = 2;
  // Optional page size in inbox forwarder event list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetInboxForwardersRequest {
  // Optional inbox id to get forwarders from
  string inboxId = 1;
  // Optional page index in inbox forwarder list pagination
  int32 page = 2;
  // Optional page size in inbox forwarder list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Optional search filter
  string searchFilter = 5;
  // Filter by created at after the given timestamp
  string since = 6;
  // Filter by created at before the given timestamp
  string before = 7;

}

message TestInboxForwarderRequest {
  // ID of inbox forwarder
  string id = 1;
  InboxForwarderTestOptions inboxForwarderTestOptions = 2;

}

message TestInboxForwardersForInboxRequest {
  // ID of inbox
  string inboxId = 1;
  InboxForwarderTestOptions inboxForwarderTestOptions = 2;

}

message TestNewInboxForwarderRequest {
  TestNewInboxForwarderOptions testNewInboxForwarderOptions = 1;

}

message UpdateInboxForwarderRequest {
  // ID of inbox forwarder
  string id = 1;
  CreateInboxForwarderOptions createInboxForwarderOptions = 2;

}

