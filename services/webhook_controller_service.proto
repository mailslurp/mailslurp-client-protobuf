/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/abstract_webhook_payload.proto";
import public "models/create_webhook_options.proto";
import public "models/json_schema_dto.proto";
import public "models/page_webhook_projection.proto";
import public "models/page_webhook_result.proto";
import public "models/unseen_error_count_dto.proto";
import public "models/verify_webhook_signature_options.proto";
import public "models/verify_webhook_signature_results.proto";
import public "models/webhook_bounce_payload.proto";
import public "models/webhook_bounce_recipient_payload.proto";
import public "models/webhook_dto.proto";
import public "models/webhook_email_opened_payload.proto";
import public "models/webhook_email_read_payload.proto";
import public "models/webhook_new_attachment_payload.proto";
import public "models/webhook_new_contact_payload.proto";
import public "models/webhook_new_email_payload.proto";
import public "models/webhook_redrive_result.proto";
import public "models/webhook_result_dto.proto";
import public "models/webhook_test_result.proto";

service WebhookControllerService {
  rpc CreateAccountWebhook (CreateAccountWebhookRequest) returns (WebhookDto);

  rpc CreateWebhook (CreateWebhookRequest) returns (WebhookDto);

  rpc DeleteAllWebhooks (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc DeleteWebhook (DeleteWebhookRequest) returns (google.protobuf.Empty);

  rpc DeleteWebhookById (DeleteWebhookByIdRequest) returns (google.protobuf.Empty);

  rpc GetAllWebhookResults (GetAllWebhookResultsRequest) returns (PageWebhookResult);

  rpc GetAllWebhooks (GetAllWebhooksRequest) returns (PageWebhookProjection);

  rpc GetInboxWebhooksPaginated (GetInboxWebhooksPaginatedRequest) returns (PageWebhookProjection);

  rpc GetJsonSchemaForWebhookEvent (GetJsonSchemaForWebhookEventRequest) returns (JSONSchemaDto);

  rpc GetJsonSchemaForWebhookPayload (GetJsonSchemaForWebhookPayloadRequest) returns (JSONSchemaDto);

  rpc GetTestWebhookPayload (GetTestWebhookPayloadRequest) returns (AbstractWebhookPayload);

  rpc GetTestWebhookPayloadBounce (google.protobuf.Empty) returns (WebhookBouncePayload);

  rpc GetTestWebhookPayloadBounceRecipient (google.protobuf.Empty) returns (WebhookBounceRecipientPayload);

  rpc GetTestWebhookPayloadEmailOpened (google.protobuf.Empty) returns (WebhookEmailOpenedPayload);

  rpc GetTestWebhookPayloadEmailRead (google.protobuf.Empty) returns (WebhookEmailReadPayload);

  rpc GetTestWebhookPayloadForWebhook (GetTestWebhookPayloadForWebhookRequest) returns (AbstractWebhookPayload);

  rpc GetTestWebhookPayloadNewAttachment (google.protobuf.Empty) returns (WebhookNewAttachmentPayload);

  rpc GetTestWebhookPayloadNewContact (google.protobuf.Empty) returns (WebhookNewContactPayload);

  rpc GetTestWebhookPayloadNewEmail (google.protobuf.Empty) returns (WebhookNewEmailPayload);

  rpc GetWebhook (GetWebhookRequest) returns (WebhookDto);

  rpc GetWebhookResult (GetWebhookResultRequest) returns (WebhookResultDto);

  rpc GetWebhookResults (GetWebhookResultsRequest) returns (PageWebhookResult);

  rpc GetWebhookResultsUnseenErrorCount (google.protobuf.Empty) returns (UnseenErrorCountDto);

  rpc GetWebhooks (GetWebhooksRequest) returns (GetWebhooksResponse);

  rpc RedriveWebhookResult (RedriveWebhookResultRequest) returns (WebhookRedriveResult);

  rpc SendTestData (SendTestDataRequest) returns (WebhookTestResult);

  rpc VerifyWebhookSignature (VerifyWebhookSignatureRequest) returns (VerifyWebhookSignatureResults);

}

message CreateAccountWebhookRequest {
  CreateWebhookOptions createWebhookOptions = 1;

}

message CreateWebhookRequest {
  string inboxId = 1;
  CreateWebhookOptions createWebhookOptions = 2;

}

message DeleteWebhookRequest {
  string inboxId = 1;
  string webhookId = 2;

}

message DeleteWebhookByIdRequest {
  string webhookId = 1;

}

message GetAllWebhookResultsRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size in list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Optional search filter
  string searchFilter = 4;
  // Filter by created at after the given timestamp
  string since = 5;
  // Filter by created at before the given timestamp
  string before = 6;
  // Filter for unseen exceptions only
  bool unseenOnly = 7;

}

message GetAllWebhooksRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size for paginated result list.
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;
  // Optional search filter
  string searchFilter = 4;
  // Filter by created at after the given timestamp
  string since = 5;
  // Filter by created at before the given timestamp
  string before = 6;

}

message GetInboxWebhooksPaginatedRequest {
  string inboxId = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Optional page size in list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Optional search filter
  string searchFilter = 5;
  // Filter by created at after the given timestamp
  string since = 6;
  // Filter by created at before the given timestamp
  string before = 7;

}

message GetJsonSchemaForWebhookEventRequest {
  string event = 1;

}

message GetJsonSchemaForWebhookPayloadRequest {
  string webhookId = 1;

}

message GetTestWebhookPayloadRequest {
  string eventName = 1;

}

message GetTestWebhookPayloadForWebhookRequest {
  string webhookId = 1;

}

message GetWebhookRequest {
  string webhookId = 1;

}

message GetWebhookResultRequest {
  // Webhook Result ID
  string webhookResultId = 1;

}

message GetWebhookResultsRequest {
  // ID of webhook to get results for
  string webhookId = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Optional page size in list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;
  // Optional search filter
  string searchFilter = 5;
  // Filter by created at after the given timestamp
  string since = 6;
  // Filter by created at before the given timestamp
  string before = 7;
  // Filter for unseen exceptions only
  bool unseenOnly = 8;

}

message GetWebhooksRequest {
  string inboxId = 1;

}

message GetWebhooksResponse {
  repeated WebhookDto data = 1;
}

message RedriveWebhookResultRequest {
  // Webhook Result ID
  string webhookResultId = 1;

}

message SendTestDataRequest {
  string webhookId = 1;

}

message VerifyWebhookSignatureRequest {
  VerifyWebhookSignatureOptions verifyWebhookSignatureOptions = 1;

}

