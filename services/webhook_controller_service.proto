/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_webhook_options.proto";
import public "models/page_webhook_projection.proto";
import public "models/webhook_dto.proto";
import public "models/webhook_payload.proto";
import public "models/webhook_test_result.proto";

service WebhookControllerService {
  rpc CreateWebhook (CreateWebhookRequest) returns (WebhookDto);

  rpc DeleteWebhook (DeleteWebhookRequest) returns (google.protobuf.Empty);

  rpc GetAllWebhooks (GetAllWebhooksRequest) returns (PageWebhookProjection);

  rpc GetTestWebhookPayload (google.protobuf.Empty) returns (WebhookPayload);

  rpc GetWebhook (GetWebhookRequest) returns (WebhookDto);

  rpc GetWebhooks (GetWebhooksRequest) returns (GetWebhooksResponse);

  rpc SendTestData (SendTestDataRequest) returns (WebhookTestResult);

}

message CreateWebhookRequest {
  // inboxId
  string inboxId = 1;
  // webhookOptions
  CreateWebhookOptions webhookOptions = 2;

}

message DeleteWebhookRequest {
  // inboxId
  string inboxId = 1;
  // webhookId
  string webhookId = 2;

}

message GetAllWebhooksRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional page size in list pagination
  int32 size = 2;
  // Optional createdAt sort direction ASC or DESC
  string sort = 3;

}

message GetWebhookRequest {
  // webhookId
  string webhookId = 1;

}

message GetWebhooksRequest {
  // inboxId
  string inboxId = 1;

}

message GetWebhooksResponse {
  repeated WebhookDto data = 1;
}

message SendTestDataRequest {
  // webhookId
  string webhookId = 1;

}

