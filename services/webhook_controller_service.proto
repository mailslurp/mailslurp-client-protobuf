/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/abstract_webhook_payload.proto";
import public "models/create_webhook_options.proto";
import public "models/page_webhook_projection.proto";
import public "models/page_webhook_result.proto";
import public "models/webhook_dto.proto";
import public "models/webhook_email_opened_payload.proto";
import public "models/webhook_email_read_payload.proto";
import public "models/webhook_new_attachment_payload.proto";
import public "models/webhook_new_contact_payload.proto";
import public "models/webhook_new_email_payload.proto";
import public "models/webhook_redrive_result.proto";
import public "models/webhook_result_dto.proto";
import public "models/webhook_test_result.proto";

service WebhookControllerService {
  rpc CreateWebhook (CreateWebhookRequest) returns (WebhookDto);

  rpc DeleteWebhook (DeleteWebhookRequest) returns (google.protobuf.Empty);

  rpc GetAllWebhookResults (GetAllWebhookResultsRequest) returns (PageWebhookResult);

  rpc GetAllWebhooks (GetAllWebhooksRequest) returns (PageWebhookProjection);

  rpc GetInboxWebhooksPaginated (GetInboxWebhooksPaginatedRequest) returns (PageWebhookProjection);

  rpc GetTestWebhookPayload (GetTestWebhookPayloadRequest) returns (AbstractWebhookPayload);

  rpc GetTestWebhookPayloadEmailOpened (google.protobuf.Empty) returns (WebhookEmailOpenedPayload);

  rpc GetTestWebhookPayloadEmailRead (google.protobuf.Empty) returns (WebhookEmailReadPayload);

  rpc GetTestWebhookPayloadNewAttachment (google.protobuf.Empty) returns (WebhookNewAttachmentPayload);

  rpc GetTestWebhookPayloadNewContact (google.protobuf.Empty) returns (WebhookNewContactPayload);

  rpc GetTestWebhookPayloadNewEmail (google.protobuf.Empty) returns (WebhookNewEmailPayload);

  rpc GetWebhook (GetWebhookRequest) returns (WebhookDto);

  rpc GetWebhookResult (GetWebhookResultRequest) returns (WebhookResultDto);

  rpc GetWebhookResults (GetWebhookResultsRequest) returns (PageWebhookResult);

  rpc GetWebhooks (GetWebhooksRequest) returns (GetWebhooksResponse);

  rpc RedriveWebhookResult (RedriveWebhookResultRequest) returns (WebhookRedriveResult);

  rpc SendTestData (SendTestDataRequest) returns (WebhookTestResult);

}

message CreateWebhookRequest {
  // inboxId
  string inboxId = 1;
  // webhookOptions
  CreateWebhookOptions webhookOptions = 2;

}

message DeleteWebhookRequest {
  // inboxId
  string inboxId = 1;
  // webhookId
  string webhookId = 2;

}

message GetAllWebhookResultsRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional search filter
  string searchFilter = 2;
  // Optional page size in list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetAllWebhooksRequest {
  // Optional page index in list pagination
  int32 page = 1;
  // Optional search filter
  string searchFilter = 2;
  // Optional page size for paginated result list.
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetInboxWebhooksPaginatedRequest {
  // inboxId
  string inboxId = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Optional search filter
  string searchFilter = 3;
  // Optional page size in list pagination
  int32 size = 4;
  // Optional createdAt sort direction ASC or DESC
  string sort = 5;

}

message GetTestWebhookPayloadRequest {
  // eventName
  string eventName = 1;

}

message GetWebhookRequest {
  // webhookId
  string webhookId = 1;

}

message GetWebhookResultRequest {
  // Webhook Result ID
  string webhookResultId = 1;

}

message GetWebhookResultsRequest {
  // ID of webhook to get results for
  string webhookId = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Optional search filter
  string searchFilter = 3;
  // Optional page size in list pagination
  int32 size = 4;
  // Optional createdAt sort direction ASC or DESC
  string sort = 5;

}

message GetWebhooksRequest {
  // inboxId
  string inboxId = 1;

}

message GetWebhooksResponse {
  repeated WebhookDto data = 1;
}

message RedriveWebhookResultRequest {
  // Webhook Result ID
  string webhookResultId = 1;

}

message SendTestDataRequest {
  // webhookId
  string webhookId = 1;

}

