/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/create_template_options.proto";
import public "models/page_template_projection.proto";
import public "models/template_dto.proto";
import public "models/template_projection.proto";

service TemplateControllerService {
  rpc CreateTemplate (CreateTemplateRequest) returns (TemplateDto);

  rpc DeleteTemplate (DeleteTemplateRequest) returns (google.protobuf.Empty);

  rpc GetAllTemplates (GetAllTemplatesRequest) returns (PageTemplateProjection);

  rpc GetTemplate (GetTemplateRequest) returns (TemplateDto);

  rpc GetTemplates (google.protobuf.Empty) returns (GetTemplatesResponse);

  rpc UpdateTemplate (UpdateTemplateRequest) returns (TemplateDto);

}

message CreateTemplateRequest {
  // createTemplateOptions
  CreateTemplateOptions createTemplateOptions = 1;

}

message DeleteTemplateRequest {
  // templateId
  string templateId = 1;

}

message GetAllTemplatesRequest {
  // Filter by created at before the given timestamp
  string before = 1;
  // Optional page index in list pagination
  int32 page = 2;
  // Filter by created at after the given timestamp
  string since = 3;
  // Optional page size in list pagination
  int32 size = 4;
  // Optional createdAt sort direction ASC or DESC
  string sort = 5;

}

message GetTemplateRequest {
  // templateId
  string templateId = 1;

}

message GetTemplatesResponse {
  repeated TemplateProjection data = 1;
}

message UpdateTemplateRequest {
  // templateId
  string templateId = 1;
  // createTemplateOptions
  CreateTemplateOptions createTemplateOptions = 2;

}

