/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 
  The version of the OpenAPI document: 6.5.2
  Contact: contact@mailslurp.dev
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/inbox_dto.proto";
import public "models/simple_send_email_options.proto";

service CommonActionsControllerService {
  rpc CreateNewEmailAddress (CreateNewEmailAddressRequest) returns (InboxDto);

  rpc CreateRandomInbox (CreateRandomInboxRequest) returns (InboxDto);

  rpc DeleteEmailAddress (DeleteEmailAddressRequest) returns (google.protobuf.Empty);

  rpc EmptyInbox (EmptyInboxRequest) returns (google.protobuf.Empty);

  rpc SendEmailQuery (SendEmailQueryRequest) returns (google.protobuf.Empty);

  rpc SendEmailSimple (SendEmailSimpleRequest) returns (google.protobuf.Empty);

}

message CreateNewEmailAddressRequest {
  bool allowTeamAccess = 1;
  bool useDomainPool = 2;
  string expiresAt = 3;
  int64 expiresIn = 4;
  string emailAddress = 5;
  string inboxType = 6;
  string description = 7;
  string name = 8;
  repeated string tags = 9;
  bool favourite = 10;
  bool virtualInbox = 11;
  bool useShortAddress = 12;
  string domainName = 13;
  string domainId = 14;
  string prefix = 15;

}

message CreateRandomInboxRequest {
  bool allowTeamAccess = 1;
  bool useDomainPool = 2;
  string expiresAt = 3;
  int64 expiresIn = 4;
  string emailAddress = 5;
  string inboxType = 6;
  string description = 7;
  string name = 8;
  repeated string tags = 9;
  bool favourite = 10;
  bool virtualInbox = 11;
  bool useShortAddress = 12;
  string domainName = 13;
  string domainId = 14;
  string prefix = 15;

}

message DeleteEmailAddressRequest {
  string inboxId = 1;

}

message EmptyInboxRequest {
  string inboxId = 1;

}

message SendEmailQueryRequest {
  // Email address to send to
  string to = 1;
  // ID of inbox to send from. If null an inbox will be created for sending
  string senderId = 2;
  // Body of the email message. Supports HTML
  string body = 3;
  // Subject line of the email
  string subject = 4;

}

message SendEmailSimpleRequest {
  SimpleSendEmailOptions simpleSendEmailOptions = 1;

}

