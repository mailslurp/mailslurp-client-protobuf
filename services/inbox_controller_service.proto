/*
  MailSlurp API
 
  MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 
  The version of the OpenAPI document: 6.5.2
  
  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ;

import "google/protobuf/empty.proto";
import public "models/email_preview.proto";
import public "models/inbox.proto";
import public "models/page_email_preview.proto";
import public "models/page_inbox_projection.proto";
import public "models/page_sent_email_projection.proto";
import public "models/send_email_options.proto";
import public "models/set_inbox_favourited_options.proto";
import public "models/update_inbox_options.proto";

service InboxControllerService {
  rpc CreateInbox (CreateInboxRequest) returns (Inbox);

  rpc DeleteAllInboxes (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc DeleteInbox (DeleteInboxRequest) returns (google.protobuf.Empty);

  rpc GetAllInboxes (GetAllInboxesRequest) returns (PageInboxProjection);

  rpc GetEmails (GetEmailsRequest) returns (GetEmailsResponse);

  rpc GetInbox (GetInboxRequest) returns (Inbox);

  rpc GetInboxEmailsPaginated (GetInboxEmailsPaginatedRequest) returns (PageEmailPreview);

  rpc GetInboxSentEmails (GetInboxSentEmailsRequest) returns (PageSentEmailProjection);

  rpc GetInboxTags (google.protobuf.Empty) returns (GetInboxTagsResponse);

  rpc GetInboxes (google.protobuf.Empty) returns (GetInboxesResponse);

  rpc SendEmail (SendEmailRequest) returns (google.protobuf.Empty);

  rpc SetInboxFavourited (SetInboxFavouritedRequest) returns (Inbox);

  rpc UpdateInbox (UpdateInboxRequest) returns (Inbox);

}

message CreateInboxRequest {
  // Optional description for an inbox.
  string description = 1;
  // Optional email address including domain you wish inbox to use (eg: test123@mydomain.com). Only supports domains that you have registered and verified with MailSlurp using dashboard or `createDomain` method.
  string emailAddress = 2;
  // Optional expires at timestamp. If your plan supports this feature you can specify when an inbox should expire. If left empty inbox will exist permanently or expire when your plan dictates
  string expiresAt = 3;
  // Is inbox favourited.
  bool favourite = 4;
  // Optional name for an inbox.
  string name = 5;
  // Optional tags for an inbox. Can be used for searching and filtering inboxes.
  repeated string tags = 6;

}

message DeleteInboxRequest {
  // inboxId
  string inboxId = 1;

}

message GetAllInboxesRequest {
  // Optionally filter results for favourites only
  bool favourite = 1;
  // Optional page index in inbox list pagination
  int32 page = 2;
  // Optionally filter by search words partial matching ID, tags, name, and email address
  string search = 3;
  // Optional page size in inbox list pagination
  int32 size = 4;
  // Optional createdAt sort direction ASC or DESC
  string sort = 5;
  // Optionally filter by tags
  string tag = 6;

}

message GetEmailsRequest {
  // Id of inbox that emails belongs to
  string inboxId = 1;
  // Limit the result set, ordered by received date time sort direction
  int32 limit = 2;
  // Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached.
  int64 minCount = 3;
  // Maximum milliseconds to spend retrying inbox database until minCount emails are returned
  int64 retryTimeout = 4;
  // Exclude emails received before this ISO 8601 date time
  string since = 5;
  // Sort the results by received date and direction ASC or DESC
  string sort = 6;

}

message GetEmailsResponse {
  repeated EmailPreview data = 1;
}

message GetInboxRequest {
  // inboxId
  string inboxId = 1;

}

message GetInboxEmailsPaginatedRequest {
  // Id of inbox that emails belongs to
  string inboxId = 1;
  // Optional page index in inbox emails list pagination
  int32 page = 2;
  // Optional page size in inbox emails list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetInboxSentEmailsRequest {
  // inboxId
  string inboxId = 1;
  // Optional page index in inbox sent email list pagination
  int32 page = 2;
  // Optional page size in inbox sent email list pagination
  int32 size = 3;
  // Optional createdAt sort direction ASC or DESC
  string sort = 4;

}

message GetInboxTagsResponse {
  repeated string data = 1;
}

message GetInboxesResponse {
  repeated Inbox data = 1;
}

message SendEmailRequest {
  // ID of the inbox you want to send the email from
  string inboxId = 1;
  // Options for the email
  SendEmailOptions sendEmailOptions = 2;

}

message SetInboxFavouritedRequest {
  // inboxId
  string inboxId = 1;
  // setInboxFavouritedOptions
  SetInboxFavouritedOptions setInboxFavouritedOptions = 2;

}

message UpdateInboxRequest {
  // inboxId
  string inboxId = 1;
  // updateInboxOptions
  UpdateInboxOptions updateInboxOptions = 2;

}

